{"version":3,"sources":["components/Screen.js","utils/constants.js","components/Button.js","components/Keyboard.js","components/Top.js","logic/calculate.js","logic/operation.js","logic/advancedOperations.js","logic/memoryHandler.js","utils/helpers.js","logic/calculation.js","logic/printNumber.js","logic/addOperator.js","logic/calculateHandler.js","components/App.js","index.js"],"names":["Screen","value","mem","className","id","type","name","slice","maxLength","disabled","buttons","dataType","children","viewBox","fill","xmlns","d","stroke","strokeWidth","ADD","find","el","SUBTRACT","MULTIPLY","DIVIDE","MPLUS","MMINUS","MRC","BACKSPACE","NEGATE","PERCENT","SQUARE","dataTypes","number","operation","advanced","memory","equals","clear","Button","onClick","data-type","Keyboard","handleChange","map","key","bind","Top","props","calculate","state","firstValue","secondValue","first","Big","second","plus","toString","minus","times","div","memValue","operator","tempValue","screenValue","advancedOperations","errorHandler","lastClicked","result","sqrt","length","memoryHandler","memoryValue","calculation","valueToAdd","indexOf","negate","printNumber","addOperator","calculateHandler","App","useState","setState","useCallback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ee8a277.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Screen.css';\r\n\r\nexport function Screen({ value, mem }) {\r\n  return (\r\n    <div className=\"calculator__screen-container\">\r\n      <p className={`calculator__screen-mem ${(mem !=='0') && 'calculator__screen-mem_visible'}`}>M</p>\r\n      <input\r\n        id=\"display\"\r\n        type=\"text\"\r\n        className=\"calculator__screen\"\r\n        name=\"screen\"\r\n        value={value.slice(0, 10)}\r\n        maxLength=\"10\"\r\n        disabled\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst square = (\r\n  <svg\r\n    className=\"square-symbol\"\r\n    viewBox=\"0 0 33 23\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path d=\"M2 10l5 11h2.5l6-19H33\" stroke=\"#fff\" strokeWidth=\"3\" />\r\n  </svg>\r\n);\r\n\r\nconst backspace = (\r\n  <svg\r\n    className=\"backspace-symbol\"\r\n    viewBox=\"0 0 27 22\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path d=\"M12 2l-9 9 9 9M3 11h24\" stroke=\"#fff\" strokeWidth=\"3\" />\r\n  </svg>\r\n);\r\n\r\nexport const buttons = [\r\n  { id: 'clear', dataType: 'clear', value: 'C', children: 'C' },\r\n  { id: 'mrc', dataType: 'memory', value: 'MRC', children: 'MRC' },\r\n  { id: 'mminus', dataType: 'memory', value: 'MMINUS', children: 'M-' },\r\n  { id: 'mplus', dataType: 'memory', value: 'MPLUS', children: 'M+' },\r\n  { id: 'negate', dataType: 'advanced', value: 'NEGATE', children: '+/-' },\r\n  { id: 'percent', dataType: 'advanced', value: 'PERCENT', children: '%' },\r\n  {\r\n    id: 'square',\r\n    dataType: 'advanced',\r\n    value: 'SQUARE',\r\n    children: square,\r\n  },\r\n  {\r\n    id: 'backspace',\r\n    dataType: 'advanced',\r\n    value: 'BACKSPACE',\r\n    children: backspace,\r\n  },\r\n  { id: 'seven', dataType: 'number', value: 7, children: 7 },\r\n  { id: 'eight', dataType: 'number', value: 8, children: 8 },\r\n  { id: 'nine', dataType: 'number', value: 9, children: 9 },\r\n  { id: 'divide', dataType: 'operation', value: 'DIVIDE', children: '÷' },\r\n  { id: 'four', dataType: 'number', value: 4, children: 4 },\r\n  { id: 'five', dataType: 'number', value: 5, children: 5 },\r\n  { id: 'six', dataType: 'number', value: 6, children: 6 },\r\n  { id: 'multiply', dataType: 'operation', value: 'MULTIPLY', children: '×' },\r\n  { id: 'one', dataType: 'number', value: 1, children: 1 },\r\n  { id: 'two', dataType: 'number', value: 2, children: 2 },\r\n  { id: 'three', dataType: 'number', value: 3, children: 3 },\r\n  { id: 'subtract', dataType: 'operation', value: 'SUBTRACT', children: '-' },\r\n  { id: 'zero', dataType: 'number', value: 0, children: 0 },\r\n  { id: 'decimal', dataType: 'number', value: '.', children: '.' },\r\n  { id: 'equals', dataType: 'equals', value: 'EQUALS', children: '=' },\r\n  { id: 'add', dataType: 'operation', value: 'ADD', children: '+' },\r\n];\r\n\r\nexport const ADD = buttons.find((el) => el.id === 'add').value;\r\nexport const SUBTRACT = buttons.find((el) => el.id === 'subtract').value;\r\nexport const MULTIPLY = buttons.find((el) => el.id === 'multiply').value;\r\nexport const DIVIDE = buttons.find((el) => el.id === 'divide').value;\r\nexport const MPLUS = buttons.find((el) => el.id === 'mplus').value;\r\nexport const MMINUS = buttons.find((el) => el.id === 'mminus').value;\r\nexport const MRC = buttons.find((el) => el.id === 'mrc').value;\r\nexport const BACKSPACE = buttons.find((el) => el.id === 'backspace').value;\r\nexport const NEGATE = buttons.find((el) => el.id === 'negate').value;\r\nexport const PERCENT = buttons.find((el) => el.id === 'percent').value;\r\nexport const SQUARE = buttons.find((el) => el.id === 'square').value;\r\n\r\nexport const dataTypes = {\r\n  number: 'number',\r\n  operation: 'operation',\r\n  advanced: 'advanced',\r\n  memory: 'memory',\r\n  equals: 'equals',\r\n  clear: 'clear',\r\n};\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\nexport function Button({ id, dataType, value, children, onClick }) {\r\n  return (\r\n    <button\r\n      id={id}\r\n      type=\"button\"\r\n      data-type={dataType}\r\n      className={`button button_type_${dataType}`}\r\n      value={value}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Keyboard.css';\r\nimport { buttons } from '../utils/constants'\r\nimport { Button } from './Button';\r\n\r\nexport function Keyboard({ handleChange }) {\r\n  const onClick = (dataType, value) => {\r\n    handleChange({dataType, value});\r\n  }\r\n\r\n  return (\r\n    <div className=\"calculator__keyboard\">\r\n      {buttons.map((el) => (\r\n        <Button\r\n          key={el.id}\r\n          id={el.id}\r\n          dataType={el.dataType}\r\n          value={el.value}\r\n          children={el.children}\r\n          onClick={onClick.bind(null, el.dataType, el.value)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Top.css';\r\n\r\nexport function Top(props) {\r\n  return (\r\n    <div className=\"calculator__top\">\r\n      <div className=\"calculator__heading\">\r\n        <h1 className=\"calculator__title\">CATLOGIC</h1>\r\n        <h2 className=\"calculator__subtitle\">CL-002</h2>\r\n      </div>\r\n      <div className=\"calculator__sun-battery-container\">\r\n        <div className=\"calculator__sun-battery\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { operation } from './operation'\r\n\r\nexport const calculate = (state, buttons) => {\r\n  /** Set temporary value for multiple equals pressing */\r\n  return operation(\r\n    state.memValue,\r\n    state.operator,\r\n    state.tempValue || state.screenValue,\r\n    buttons\r\n  );\r\n};\r\n","/** big.js: Handle decimal precision */\r\nimport Big from 'big.js';\r\n\r\nexport function operation(\r\n  firstValue,\r\n  operation,\r\n  secondValue,\r\n  { ADD, SUBTRACT, MULTIPLY, DIVIDE }\r\n) {\r\n  const first = Big(firstValue);\r\n  const second = Big(secondValue);\r\n\r\n  switch (operation) {\r\n    case ADD: {\r\n      return first.plus(second).toString();\r\n    }\r\n    case SUBTRACT: {\r\n      return first.minus(second).toString();\r\n    }\r\n    case MULTIPLY: {\r\n      return first.times(second).toString();\r\n    }\r\n    case DIVIDE: {\r\n      /** Forbid dividing by zero */\r\n      if (secondValue === '0') {\r\n        return 'Error';\r\n      }\r\n      return first.div(second).toString();\r\n    }\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nexport function advanced(\r\n  screenValue,\r\n  operation,\r\n  { BACKSPACE, NEGATE, PERCENT, SQUARE }\r\n) {\r\n  const value = Big(screenValue);\r\n\r\n  switch (operation) {\r\n    case NEGATE: {\r\n      return (-value).toString();\r\n    }\r\n    case PERCENT: {\r\n      return (value * 0.01).toString();\r\n    }\r\n    /** Forbid square root for negative numbers */\r\n    case SQUARE: {\r\n      if (value < 0) {\r\n        return 'Error';\r\n      }\r\n      return value.sqrt().toString();\r\n    }\r\n    case BACKSPACE: {\r\n      if (screenValue.length > 1) {\r\n        return value.toString().slice(0, -1);\r\n      } else return '';\r\n    }\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nexport function memory(memoryValue, operation, screenValue, { MMINUS, MPLUS }) {\r\n  const mem = Big(memoryValue);\r\n  const value = Big(screenValue);\r\n\r\n  switch (operation) {\r\n    case MMINUS: {\r\n      return mem.minus(value).toString();\r\n    }\r\n    case MPLUS: {\r\n      return mem.plus(value).toString();\r\n    }\r\n    default:\r\n      return;\r\n  }\r\n}\r\n","import { advanced } from './operation';\r\n\r\nexport const advancedOperations = (\r\n  { dataType, value },\r\n  state,\r\n  buttons,\r\n  errorHandler,\r\n  dataTypes\r\n) => {\r\n  if (errorHandler(state.screenValue)) return;\r\n\r\n  /** Disable backspace if calculation in progress */\r\n  if (\r\n    (state.lastClicked.dataType === dataTypes.operation ||\r\n      !state.screenValue) &&\r\n    value === buttons.BACKSPACE\r\n  )\r\n    return;\r\n\r\n  const result = advanced(state.screenValue, value, buttons);\r\n\r\n  return {\r\n    ...state,\r\n    screenValue: result,\r\n    lastClicked: { dataType, value },\r\n  };\r\n};\r\n","import { memory } from './operation';\r\n\r\nexport const memoryHandler = (\r\n  { dataType, value },\r\n  state,\r\n  { MPLUS, MMINUS, MRC },\r\n  errorHandler\r\n) => {\r\n  if (errorHandler(state.screenValue)) return;\r\n\r\n  if (value === MPLUS || value === MMINUS) {\r\n    const result = memory(state.memory, value, state.screenValue, {\r\n      MMINUS,\r\n      MPLUS,\r\n    });\r\n    return { ...state, memory: result, lastClicked: { dataType, value } };\r\n  } else if (value === MRC) {\r\n    if (state.lastClicked.value === MRC) {\r\n      return { ...state, memory: '0' };\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      screenValue: state.memory,\r\n      memValue: state.screenValue,\r\n      lastClicked: { dataType, value },\r\n    };\r\n  }\r\n};\r\n","export const errorHandler = (value) => {\r\n  return value === 'Error';\r\n}\r\n","import { printNumber } from './printNumber';\r\nimport { addOperator } from './addOperator';\r\nimport { calculateHandler } from './calculateHandler';\r\nimport { advancedOperations } from './advancedOperations';\r\nimport { memoryHandler } from './memoryHandler';\r\nimport { errorHandler } from '../utils/helpers';\r\nimport {\r\n  ADD,\r\n  SUBTRACT,\r\n  MULTIPLY,\r\n  DIVIDE,\r\n  BACKSPACE,\r\n  NEGATE,\r\n  PERCENT,\r\n  SQUARE,\r\n  MPLUS,\r\n  MMINUS,\r\n  MRC,\r\n  dataTypes,\r\n} from '../utils/constants';\r\n\r\nexport function calculation(value, state) {\r\n  switch (value.dataType) {\r\n    case dataTypes.number: {\r\n      return printNumber(value, state, errorHandler, dataTypes);\r\n    }\r\n    case dataTypes.operation: {\r\n      return addOperator(\r\n        value,\r\n        state,\r\n        { ADD, SUBTRACT, MULTIPLY, DIVIDE },\r\n        errorHandler,\r\n        dataTypes\r\n      );\r\n    }\r\n    case dataTypes.advanced: {\r\n      return advancedOperations(\r\n        value,\r\n        state,\r\n        { BACKSPACE, NEGATE, PERCENT, SQUARE },\r\n        errorHandler,\r\n        dataTypes\r\n      );\r\n    }\r\n    case dataTypes.memory: {\r\n      return memoryHandler(value, state, { MPLUS, MMINUS, MRC }, errorHandler);\r\n    }\r\n    case dataTypes.equals: {\r\n      if (state.memValue) {\r\n        return calculateHandler(\r\n          value,\r\n          state,\r\n          { ADD, SUBTRACT, MULTIPLY, DIVIDE },\r\n          errorHandler\r\n        );\r\n      } else return;\r\n    }\r\n    case dataTypes.clear: {\r\n      return {\r\n        ...state,\r\n        screenValue: '',\r\n        operator: '',\r\n        memValue: '',\r\n        tempValue: '',\r\n        lastClicked: {},\r\n        negate: false,\r\n      };\r\n    }\r\n    default: {\r\n      return;\r\n    }\r\n  }\r\n}\r\n","export const printNumber = (\r\n  { dataType, value },\r\n  state,\r\n  errorHandler,\r\n  dataTypes\r\n) => {\r\n  if (errorHandler(state.screenValue)) return;\r\n\r\n  let valueToAdd = value.toString();\r\n\r\n  /** Forbid multiple leading zeroes */\r\n  if (state.screenValue === '0' && valueToAdd === '0') return;\r\n\r\n  /** Add decimal, prevent multiple decimals */\r\n  if (value === '.') {\r\n    if (\r\n      state.screenValue.indexOf('.') !== -1 &&\r\n      state.lastClicked.dataType !== dataTypes.operation\r\n    )\r\n      return;\r\n    /** Add 0 before . if starting or continuing calculation */\r\n    if (\r\n      !state.screenValue ||\r\n      state.lastClicked.dataType === dataTypes.operation\r\n    )\r\n      valueToAdd = '0.';\r\n  }\r\n\r\n  /** Save first value and start next value if operation was pressed */\r\n  if (state.lastClicked.dataType === dataTypes.operation) {\r\n    /** Negate value if minus was pressed after first operation */\r\n    if (state.negate) {\r\n      valueToAdd = -valueToAdd;\r\n    }\r\n    return {\r\n      ...state,\r\n      screenValue: valueToAdd.toString(),\r\n      memValue: state.screenValue,\r\n      lastClicked: { dataType, value },\r\n      negate: false,\r\n    };\r\n  }\r\n\r\n  /** New calculation if equals or memory was pressed */\r\n  if (\r\n    state.lastClicked.dataType === dataTypes.equals ||\r\n    state.lastClicked.dataType === dataTypes.memory\r\n  ) {\r\n    return {\r\n      ...state,\r\n      screenValue: valueToAdd.toString(),\r\n      operator: '',\r\n      memValue: '',\r\n      tempValue: '',\r\n      lastClicked: { dataType, value },\r\n      negate: false,\r\n    };\r\n  }\r\n\r\n  /** Update state with number */\r\n  return {\r\n    ...state,\r\n    screenValue: (state.screenValue += valueToAdd),\r\n    lastClicked: { dataType, value },\r\n  };\r\n};\r\n","import { calculate } from './calculate';\r\n\r\nexport const addOperator = (\r\n  { dataType, value },\r\n  state,\r\n  buttons,\r\n  errorHandler,\r\n  dataTypes\r\n) => {\r\n  if (errorHandler(state.screenValue)) return;\r\n\r\n  /** Chain operations */\r\n  if (state.lastClicked.dataType === dataTypes.number && state.memValue) {\r\n    const result = calculate(state, buttons);\r\n    return {\r\n      ...state,\r\n      screenValue: result,\r\n      operator: value,\r\n      memValue: result,\r\n      tempValue: '',\r\n      lastClicked: { dataType, value },\r\n    };\r\n  }\r\n\r\n  /** Set temporary state for negation */\r\n  if (\r\n    state.lastClicked.dataType === dataTypes.operation &&\r\n    value === buttons.SUBTRACT\r\n  ) {\r\n    return { ...state, negate: true };\r\n  }\r\n\r\n  return {\r\n    ...state,\r\n    screenValue: state.screenValue || '0',\r\n    operator: value,\r\n    tempValue: '',\r\n    lastClicked: { dataType, value },\r\n    negate: false,\r\n  };\r\n};\r\n","import { calculate } from './calculate';\r\n\r\nexport const calculateHandler = (\r\n  { dataType, value },\r\n  state,\r\n  buttons,\r\n  errorHandler\r\n) => {\r\n  if (errorHandler(state.screenValue)) return;\r\n\r\n  const result = calculate(state, buttons);\r\n\r\n  return {\r\n    ...state,\r\n    screenValue: result,\r\n    memValue: result,\r\n    tempValue: state.tempValue || state.screenValue,\r\n    lastClicked: { dataType, value },\r\n  };\r\n};\r\n","import React, { useState, useCallback } from 'react';\r\nimport { Screen } from './Screen';\r\nimport { Keyboard } from './Keyboard';\r\nimport { Top } from './Top';\r\nimport { calculation } from '../logic/calculation';\r\nimport 'normalize.css';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [state, setState] = useState({\r\n    screenValue: '',\r\n    operator: '',\r\n    memValue: '',\r\n    tempValue: '',\r\n    lastClicked: {},\r\n    negate: false,\r\n    memory: '0'\r\n  });\r\n\r\n  const handleChange = useCallback((value) => {\r\n    const result = calculation(value, state);\r\n    if (result) setState(result);\r\n  }, [state]);\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <Top />\r\n      <Screen value={state.screenValue || '0'} mem={state.memory} />\r\n      <Keyboard handleChange={handleChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}